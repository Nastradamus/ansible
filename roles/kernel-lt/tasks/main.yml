---
# Install/update/upgrade last CentOS 7 lt kernel
- name: "Adding ELRepo"
  yum_repository:
    name: elrepo
    description: "ELRepo.org Community Enterprise Linux Repository - el7"
    baseurl: |
            http://mirrors.coreix.net/elrepo/elrepo/el7/$basearch/
            http://mirror.rackspace.com/elrepo/elrepo/el7/$basearch/
            http://elrepo.org/linux/elrepo/el7/$basearch/
            http://repos.lax-noc.com/elrepo/elrepo/el7/$basearch/
    mirrorlist: http://mirrors.elrepo.org/mirrors-elrepo.el7
    enabled: true
    gpgcheck: true
    gpgkey: https://raw.githubusercontent.com/elrepo/packages/master/elrepo-release/el7/RPM-GPG-KEY-elrepo.org

- name: "Adding ELRepo Kernel"
  yum_repository:
    name: elrepo-kernel
    description: "ELRepo.org Community Enterprise Linux Kernel Repository - el7"
    baseurl: http://elrepo.org/linux/kernel/el7/$basearch/
    enabled: true
    gpgcheck: true
    gpgkey: https://www.elrepo.org/RPM-GPG-KEY-elrepo.org

- name: "Installing newest kernel"
  yum:
    name:
      - kernel-lt
      - kernel-lt-devel
    state: installed
    update_cache: true

# Get target_kernel from variable (example: 4.4), find it's number in the /etc/grub2.cfg
# The toppest will be used (0 is the top)
- name: "Choise the kernel menuentry position"
  shell: >
      awk -F\' '$1=="menuentry " {print i++ ": " $2}' /etc/grub2.cfg | grep -F {{ target_kernel }} | cut -d ':' -f 1 | head -n 1
  register: selected_kernel_num
  tags:
    - skip_ansible_lint

- name: "Setting default kernel"
  lineinfile:
    path: "/etc/default/grub"
    regexp: '^GRUB_DEFAULT='
    line: "GRUB_DEFAULT={{ selected_kernel_num.stdout }}"
  when: selected_kernel_num.rc == 0

- name: "Re-creating grub config"
  shell: "grub2-mkconfig -o /boot/grub2/grub.cfg"
  when: selected_kernel_num.rc == 0
  tags:
    - skip_ansible_lint

- name: Reboot server (first restart)
  shell: nohup bash -c "sleep 2s && reboot" &
  async: 0
  poll: 0
  ignore_errors: true
  register: reboot
  when: selected_kernel_num.rc == 0
  tags:
    - skip_ansible_lint

- name: wait for the server to restart (first restart)
  wait_for:
    host: "{{ inventory_hostname }}"
    port: "22"
    delay: 33
    timeout: 300
    state: started
  delegate_to: localhost
  become: false
  when: selected_kernel_num.rc == 0
  tags:
    - skip_ansible_lint

- name: Yum global system update (after new kernel installed)
  yum:
    name: "*"
    state: latest
  when: ansible_distribution == "CentOS"
  tags:
    - soft-update
    - skip_ansible_lint

- name: Reboot server (after update after new kernel installed)
  shell: nohup bash -c "sleep 2s && reboot" &
  async: 0
  poll: 0
  ignore_errors: true
  register: reboot
  when: selected_kernel_num.rc == 0
  tags:
    - skip_ansible_lint

- name: wait for the server to restart (last restart)
  wait_for:
    host: "{{ inventory_hostname }}"
    port: "33"
    delay: 20
    timeout: 300
    state: started
  delegate_to: localhost
  become: false
  when: selected_kernel_num.rc == 0
  tags:
    - skip_ansible_lint

